<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="book">

	<!-- 
		xml 파일에선 쿼리를 작성한다. 마이바티스가 xml에 설정된 쿼리를 읽어서 실행을 시켜준다. 
		mapper xml 그 자체는 DAO (Data Access Object가 실행시켜줌.)
	-->
	
	<insert id="insert" parameterType="hashMap" useGeneratedKeys="true" keyProperty="book_id">  
	    <![CDATA[
		    insert into book
		    	(title, category, price) 
		    values
		    	(#{title}, #{category}, #{price})
	    ]]>
	</insert>


	<select id="select_detail" parameterType="hashMap" resultType="hashMap">
	    <![CDATA[
	        select
		        title,
		        category,
		        price,
		 		insert_date
	        from
	        	book
	        where
	        	book_id = #{bookId}   
	    ]]>
	</select>


	<update id="update" parameterType="hashMap">  
	<![CDATA[  
			update book set  
				title = #{title},  
				category = #{category},  
				price = #{price}  
			where  
				book_id = #{bookId}  
		]]>  
	</update> 


	<delete id="delete" parameterType="hashMap">  
		<![CDATA[  
			delete from book  
			where  
				book_id = #{bookId}  
		]]>  
	</delete> 


<!-- 목록의 경우 resultType은 한 행을 담는 타입을 지정. 책 상세페이지와 동일함. -->
<!-- 기존의 책 목록 쿼리를 조금 수정해서 검색기능을 추가한것. -->
	<select id="select_list" parameterType="hashMap" resultType="hashMap">  
		<![CDATA[  
			select  
				book_id,  
				title,  
				category,  
				price,  
				insert_date  
			from  
				book  
			where 
				1 = 1  
		]]>
		  
		<if test="keyword != null and keyword != ''">  
			and (title like CONCAT('%',#{keyword},'%') or category like CONCAT('%',#{keyword},'%'))  
		</if>  
		order by insert_date desc  
	</select>  

</mapper>